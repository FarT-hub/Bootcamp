{"version":3,"sources":["assets/GC_logo.svg","assets/ITN_logo.svg","assets/shid_logo.svg","assets/facts-slider/slide-1.jpg","assets/facts-slider/slide-2.jpg","assets/facts-slider/slide-3.jpg","assets/facts-slider/slide-4.jpg","assets/facts-slider/slide-5.jpg","assets/sectors/industry.jpg","assets/sectors/transport.jpg","assets/sectors/sity_planing.jpg","assets/sectors/energy.jpg","assets/sectors/energetics.jpg","assets/sectors/utilisation.jpg","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/SectorsList/SectorItem.js","components/SectorsList/SectorsList.js","components/AirQuality/AirQuality.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","logosImages","logos","map","logoItem","i","src","alt","className","key","navItems","link","href","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slideInfo","id","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","spaceBetween","slidesPerView","slidesPerGroup","loop","loopFillGroupWithBlank","SectorItem","sector","number","useState","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","style","background","backgroundSize","name","description","SectorsList","subtitle","itemsList","items","mapboxgl","accessToken","AirQuality","mapContainer","useRef","lng","lat","zoom","locationInfo","useEffect","Map","container","current","center","addControl","NavigationControl","ref","Footer","partners","author","designer","partnersLogos","logo","navLinks","App","shidLogo","ITNLogo","gcLogo","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d0425efd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GC_logo.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN_logo.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide-1.7e1db0da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-2.12a25e24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-3.638ec227.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-4.8a21e8b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-5.bb9f49bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/industry.5ec44869.jpg\";","module.exports = __webpack_public_path__ + \"static/media/transport.65643b05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sity_planing.f8f67844.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.fb084e1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energetics.43f9dac6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/utilisation.a8b6caee.jpg\";","import React from 'react';\r\nimport './HeroBlock.scss';\r\n\r\nconst HeroBlock = ({title, links, logos}) => {\r\n    const logosImages = logos.map((logoItem, i) => <img src={logoItem} alt=\"partner-logo\" className=\"hero-partners-item\" key={i}/>);\r\n    const navItems = links.map((link, i) => <a href={link.href} className=\"hero-navigation-item\" key={i}>{link.title}</a>);\r\n    \r\n       return (\r\n        <section className=\"hero\">\r\n            <div className=\"container\">\r\n            <div className=\"hero-partners\">\r\n                {logosImages}\r\n            </div>\r\n            <nav className=\"hero-navigation\">\r\n                {navItems}\r\n            </nav>\r\n            <h1 className=\"hero-title\">{title}</h1>\r\n            <a href=\"#\" className=\"hero-link\">Отследить</a>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default HeroBlock;","import React from 'react';\r\n\r\nconst SlideFacts = ({item}) => {\r\n    return (\r\n        <div className=\"facts-slide\">\r\n            <img src={item.imgUrl} alt=\"slide image\"/>\r\n            <p className=\"facts-slide-desc\">\r\n                {item.desc}</p>\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts\";\r\nimport { Swiper, SwiperSlide, } from 'swiper/react';\r\nimport SwiperCore, { Navigation, Pagination } from 'swiper';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport './Facts.scss';\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nconst Facts = ({title, slides}) => {\r\n    const factsSlides = slides.map((slideInfo) => <SwiperSlide key={slideInfo.id}>\r\n        <SlideFacts item={slideInfo}/>\r\n    </SwiperSlide>);\r\n\r\n    return (\r\n        <section id=\"facts\" className=\"facts container\" >\r\n\r\n            <h2 className=\"facts-title\">{title}</h2>\r\n            <div className=\"swiper-button-prev\"/>\r\n            <div className=\"container\">\r\n            <Swiper\r\n                navigation={{\r\n                    nextEl: '.swiper-button-next',\r\n                    prevEl: '.swiper-button-prev',\r\n                }}\r\n                pagination={{\r\n                    el: '.facts-pagination',\r\n                    clickable: true,\r\n                    renderBullet: function (index, className) {\r\n                    return `<span class=\"facts-pagination-bullet ${className}\"></span>`;\r\n                  },\r\n                }}\r\n                spaceBetween={150}\r\n                slidesPerView={3}\r\n                slidesPerGroup={3}\r\n                loop={true}\r\n                loopFillGroupWithBlank={true}\r\n                >\r\n                {factsSlides}\r\n            </Swiper>\r\n            </div>\r\n\r\n            <div className=\"swiper-button-next\"/>\r\n            <div className=\"facts-pagination\"/>\r\n\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Facts;","import React, {useState} from 'react';\r\n\r\nconst SectorItem = ({sector, number}) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false)\r\n    const toggleToolTip = (newValue) => {\r\n        setDirectionSwitched(number % 3 === 0);\r\n        setToolTipShowing(newValue);\r\n    }\r\n    // const toggleToolTip = () => {\r\n    // \tsetToolTipShowing(\r\n    // \t\t!isToolTipShowing\r\n    // \t)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"sectors-list-item\"\r\n             onMouseEnter={() => toggleToolTip(true)}\r\n             onMouseLeave={() => toggleToolTip(false)}\r\n             style={{\r\n                 background: `url(${sector.imgUrl}) center no-repeat`,\r\n                 backgroundSize: 'cover'\r\n             }}>\r\n            <p className=\"sectors-list-item-name\">\r\n                {sector.name}\r\n            </p>\r\n            {\r\n                isToolTipShowing && <p className={`sectors-list-item-tooltip ${\r\n                    isDirectionSwitched\r\n                        ? \"sectors-list-item-tooltip-switched\"\r\n                        : \"\"\r\n                }`}>\r\n                    {sector.description}\r\n                </p>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectorItem;","import React from 'react';\r\nimport './SectorsList.scss'\r\nimport SectorItem from \"./SectorItem\";\r\n\r\nconst SectorsList = ({title, subtitle, items}) => {\r\n    const itemsList = items.map((sector, i) => <SectorItem sector={sector} number={i+1} key={i}/>)\r\n\r\n    return (\r\n        <section id=\"policy\" className=\"sectors container\">\r\n            <div className=\"container\">\r\n            <h2 className=\"sectors-title\">{title}</h2>\r\n            <p className=\"sectors-subtitle\">{subtitle}</p>\r\n            <div className=\"sectors-list\">\r\n                {itemsList}\r\n            </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SectorsList;","import React, {useEffect, useRef, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport './AirQuality.scss';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoieWFtbnlrIiwiYSI6ImNrZmxhZjZscjAwb2gycm54aWo2bGJvZnEifQ.BbYutmem-GZtYciYeMln1A';\r\n\r\nconst AirQuality = () => {\r\n    const mapContainer = useRef(null);\r\n    const [locationInfo] = useState({\r\n        lng: 30.6,\r\n        lat: 50.45,\r\n        zoom: 7\r\n    });\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [locationInfo.lng, locationInfo.lat],\r\n            zoom: locationInfo.zoom\r\n        });\r\n        map.addControl(new mapboxgl.NavigationControl('zoom'));\r\n    }, [])\r\n    return (\r\n        <section id=\"quality\" className={'air-quality container'}>\r\n            <div className=\"container\">\r\n            <h2 className=\"air-quality-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n\r\n            <div className=\"air-quality-map\" ref={mapContainer}/>\r\n\r\n            <p className=\"air-quality-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AirQuality;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({partners, links, author, designer}) => {\r\n    const partnersLogos = partners.map((logo, i) => <img key={i} src={logo} alt={'partner logo'}\r\n                                                         className=\"footer-partners-item\"/>);\r\n    const navLinks = links.map((link, i) => <a href={link.href} key={i} className={'footer-nav-link'}>{link.title}</a>)\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer-partners\">\r\n                    {partnersLogos}\r\n                </div>\r\n\r\n                <div className=\"footer-text-wrap\">\r\n                    <div className=\"footer-nav\">\r\n                        {navLinks}\r\n                    </div>\r\n\r\n                    <p className=\"footer-nav-text\">\r\n                        Сайт был разработан <span className=\"text-yellow\">{author}</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">{designer}</span>.\r\n                    </p>\r\n                </div>\r\n\r\n                <p className=\"footer-text\">\r\n                    2020, Все права защищены\r\n                </p>\r\n                <p className=\"footer-text\">\r\n                    Согласие на обработку персональных данных <br/>\r\n                    Политика конфиденциальности\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './App.scss';\r\nimport HeroBlock from \"./components/HeroBlock/HeroBlock\";\r\nimport Facts from \"./components/Facts/Facts\";\r\nimport SectorsList from \"./components/SectorsList/SectorsList\";\r\nimport AirQuality from \"./components/AirQuality/AirQuality\";\r\nimport gcLogo from './assets/GC_logo.svg';\r\nimport ITNLogo from './assets/ITN_logo.svg';\r\nimport shidLogo from './assets/shid_logo.svg';\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nfunction App() {\r\n  const partners = [\r\n    shidLogo,\r\n    ITNLogo,\r\n    gcLogo    \r\n  ];\r\n  const navLinks = [\r\n    {\r\n      title: \"Основные факты\",\r\n      href: \"#facts\"\r\n    },\r\n    {\r\n      title: \"Индекс качества воздуха\",\r\n      href: \"#quality\"\r\n    },\r\n    {\r\n      title: \"Политика по уменьшению загрязнений\",\r\n      href: \"#policy\"\r\n    },\r\n    \r\n  ];\r\n  const factsSlides = [\r\n    {\r\n      id: '1111',\r\n      imgUrl: require(\"./assets/facts-slider/slide-1.jpg\"),\r\n      desc: \"Женщины и дети - главные жертвы загрязнения воздуха\"\r\n    },\r\n    {\r\n      id: '1112',\r\n      imgUrl: require(\"./assets/facts-slider/slide-2.jpg\"),\r\n      desc: \"Защитники окружающей среды подвергаются преследованиям\"\r\n    },\r\n    {\r\n      id: '1113',\r\n      imgUrl: require(\"./assets/facts-slider/slide-3.jpg\"),\r\n      desc: \"Загрязнение воздуха – нарушение прав человека\"\r\n    },\r\n    {\r\n      id: '1114',\r\n      imgUrl: require(\"./assets/facts-slider/slide-4.jpg\"),\r\n      desc: \"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха\"\r\n    },\r\n    {\r\n      id: '1115',\r\n      imgUrl: require(\"./assets/facts-slider/slide-5.jpg\"),\r\n      desc: \"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\r\n    },    \r\n  ];\r\n\r\n  const sectors = [\r\n    {\r\n      name: \"Промышленность\",\r\n      imgUrl: require('./assets/sectors/industry.jpg'),\r\n      description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\r\n    },\r\n    {\r\n      name: \"Транспорт\",\r\n      imgUrl: require('./assets/sectors/transport.jpg'),\r\n      description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\r\n    },\r\n    {\r\n      name: \"Городское планирование\",\r\n      imgUrl: require('./assets/sectors/sity_planing.jpg'),\r\n      description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"\r\n    },\r\n    {\r\n      name: \"Энергия\",\r\n      imgUrl: require('./assets/sectors/energy.jpg'),\r\n      description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\r\n    },\r\n    {\r\n      name: \"Энергетика\",\r\n      imgUrl: require('./assets/sectors/energetics.jpg'),\r\n      description: \"Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\r\n    },\r\n    {\r\n      name: \"Утилизация отходов\",\r\n      imgUrl: require('./assets/sectors/utilisation.jpg'),\r\n      description: \"стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\r\n    },\r\n  ];\r\n\r\n  const author = \"Фрацевым Артемом\";\r\n  const designer = \"Валерией Бубырь\";\r\n  return <>\r\n    <HeroBlock title=\"Качество атмосферного воздуха и здоровье\"\r\n               logos={partners}\r\n               links={navLinks}/>\r\n    <Facts  title=\"Основные факты\"\r\n            slides={factsSlides}/>\r\n    <AirQuality/>\r\n    <SectorsList title=\"Политика по уменьшению загрязнений\"\r\n                 subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\r\n                 items={sectors}/>\r\n    <Footer links={navLinks} partners={partners} author={author} designer={designer}/>\r\n  </>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}